// overload 示例
module: Main
    import: os

    // Animal结构体
    struct: Animal
        // 字段
        fields:
            declare name: string
            declare age: int

        // === 构造函数重载 ===
        // 1) 传入 name 和 age
        init:
            params:
                n: string
                a: int
            body:
                this.name = n
                this.age = a
            end body
        end init

        // 2) 只传入 name，age 默认 0
        init:
            params:
                n: string
            body:
                this.name = n
                this.age = 0
            end body
        end init

        // 3) 无参，使用默认值
        init:
            params:
            body:
                this.name = "Unknown"
                this.age = 0
            end body
        end init
        // === 构造函数重载结束 ===

        function: getAge
            returns: int
            body:
                return this.age
            end body
        end function

        // === 方法重载 ===
        // A) 设置绝对年龄
        function: setAge
            params:
                declare a: int
            body:
                this.age = a
            end body
        end function

        // B) 以增量的方式修改年龄（在当前基础上增加 delta）
        function: setAge
            params:
                declare delta: int
                declare asIncrement: boolean
            body:
                // 仅当 asIncrement 为真时，按增量处理；否则与绝对设置一致
                if asIncrement == true then
                    this.age = this.age + delta
                else
                    this.age = delta
                end if
            end body
        end function
        // === 方法重载结束 ===
    end struct

    // 程序入口
    function: main
        returns: void
        body:
            // 使用 2参构造
            declare a: Animal = new Animal("GenericAnimal", 1)
            os.println("a.age init -> " + a.getAge())     // 1

            // 使用单参构造（age 默认 0）
            declare b: Animal = new Animal("OnlyName")
            os.println("b.age init -> " + b.getAge())     // 0

            // 使用无参构造（默认 Unknown, 0）
            declare c: Animal = new Animal()
            os.println("c.age init -> " + c.getAge())     // 0

            // 方法重载调用：绝对设置年龄
            a.setAge(5)
            os.println("a.setAge(5) -> " + a.getAge())    // 5

            // 方法重载调用：按增量增加年龄（+2）
            a.setAge(2, true)
            os.println("a.setAge(2, true) -> " + a.getAge()) // 7

            // 如果第二个参数为 false，则等同于绝对设置
            a.setAge(10, false)
            os.println("a.setAge(10, false) -> " + a.getAge()) // 10
        end body
    end function
end module
